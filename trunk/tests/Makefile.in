###############################################################################
# This file is part of "Patrick's Programming Library", Version 7 (PPL7).
# Web: http://www.pfp.de/ppl/
#
# $Author$
# $Revision$
# $Date$
# $Id$
#
###############################################################################
#
# Copyright (c) 2013, Patrick Fedick <patrick@pfp.de>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#   1. Redistributions of source code must retain the above copyright notice,
#      this list of conditions and the following disclaimer. 
#   2. Redistributions in binary form must reproduce the above copyright notice,
#      this list of conditions and the following disclaimer in the documentation
#      and/or other materials provided with the distribution. 
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
###############################################################################

GTEST_DIR	= @GTEST_PREFIX@
CC			= @CC@
CXX			= @CXX@
EXTRA_CFLAGS = 
INCLUDE	= -I. -I$(GTEST_DIR)/include
CFLAGS	= -ggdb -Wall  $(INCLUDE) `../ppl7-config --cflags debug source` $(EXTRA_CFLAGS)
LIBS	= `../ppl7-config --libs debug source` -lstdc++
LIBS_COVERAGE	= `../ppl7-config --libs coverage source` @GCOV_LDFLAGS@ -lstdc++
PROGNAME = testsuite


OBJECTS = compile/dir.o compile/main.o compile/strings.o compile/datetime.o compile/array.o \
	compile/memoryheap.o compile/memorygroup.o compile/wordlist.o \
	compile/bytearray.o compile/bytearrayptr.o \
	compile/avltree.o compile/assocarray.o compile/pointer.o \
	compile/file.o compile/list.o compile/functions.o \
	compile/inet.o compile/resolver.o compile/widestrings.o \
	compile/db_postgres.o \
	compile/configparser.o \
	compile/logger.o compile/time.o \
	compile/tcpsocket.o \
	compile/filestatic.o compile/textsnippets.o \
	compile/mhash.o compile/mcrypt.o compile/digest.o compile/crypto.o \
	compile/audioinfo.o

# compile/grafix_drawable.o compile/grafix_imagefilter.o
	
# compile/gfxreftest.o

$(PROGNAME): compile/libgtest.a $(OBJECTS) ppl7-tests.h
	$(CXX) -O -ggdb -o $(PROGNAME) $(CFLAGS) $(OBJECTS) compile/libgtest.a $(LIBS)

$(PROGNAME)_coverage: compile/libgtest.a $(OBJECTS) ppl7-tests.h
	$(CXX) -O -ggdb -o $(PROGNAME)_coverage $(CFLAGS) $(OBJECTS) compile/libgtest.a $(LIBS_COVERAGE)


all: $(PROGNAME) threadtest toolkit loggertest

coverage: $(PROGNAME)_coverage
 
test: $(PROGNAME)
	./$(PROGNAME)
	
xml: $(PROGNAME)
	./$(PROGNAME) --gtest_output=xml
	
widestring: $(PROGNAME)
	./$(PROGNAME) --gtest_filter=WideStringTest*
	
memcheck: $(PROGNAME)
	valgrind --tool=memcheck --leak-check=full --show-reachable=no --suppressions=valgrind.suppressions --xml=yes --xml-file=testsuite.valgrind ./$(PROGNAME)

threadtest: compile/threadtest.o ppl7-tests.h
	$(CXX) -O -ggdb -o threadtest $(CFLAGS) compile/threadtest.o $(LIBS)

toolkit: compile/toolkit.o src/toolkit.h ../release/libppl7.a
	$(CXX) -O -ggdb -o toolkit $(CFLAGS) compile/toolkit.o $(LIBS)

loggertest: src/loggertest.cpp ../release/libppl7.a
	mkdir -p compile
	$(CXX) -O -ggdb -o loggertest $(CFLAGS) src/loggertest.cpp $(LIBS)


clean:
	-rm -rf compile tmp.grafixtest.png
	-rm -rf *.core

compile/libgtest.a:
	mkdir -p compile
	$(CXX) -I${GTEST_DIR}/include -I${GTEST_DIR} -o compile/gtest-all.o -c ${GTEST_DIR}/src/gtest-all.cc
	ar -rv compile/libgtest.a compile/gtest-all.o


compile/main.o: src/main.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/main.o -c src/main.cpp

compile/functions.o: src/functions.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/functions.o -c src/functions.cpp

compile/pointer.o: src/pointer.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/pointer.o -c src/pointer.cpp $(CFLAGS) $(LIB)

compile/datetime.o: src/datetime.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/datetime.o -c src/datetime.cpp $(CFLAGS) $(LIB)

compile/bytearray.o: src/bytearray.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/bytearray.o -c src/bytearray.cpp $(CFLAGS) $(LIB)

compile/bytearrayptr.o: src/bytearrayptr.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/bytearrayptr.o -c src/bytearrayptr.cpp $(CFLAGS) $(LIB)

compile/strings.o: src/strings.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/strings.o -c src/strings.cpp $(CFLAGS) $(LIB)

compile/widestrings.o: src/widestrings.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/widestrings.o -c src/widestrings.cpp $(CFLAGS) $(LIB)

compile/array.o: src/array.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/array.o -c src/array.cpp $(CFLAGS) $(LIB)

compile/memoryheap.o: src/memoryheap.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/memoryheap.o -c src/memoryheap.cpp $(CFLAGS) $(LIB)

compile/memorygroup.o: src/memorygroup.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/memorygroup.o -c src/memorygroup.cpp $(CFLAGS) $(LIB)

compile/avltree.o: src/avltree.cpp Makefile compile/wordlist.o ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/avltree.o -c src/avltree.cpp $(CFLAGS) $(LIB)

compile/wordlist.o: src/wordlist.cpp
	mkdir -p compile
	$(CXX) -Wall -O -o compile/wordlist.o -c -c src/wordlist.cpp $(CFLAGS)

compile/assocarray.o: src/assocarray.cpp Makefile compile/wordlist.o ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/assocarray.o -c src/assocarray.cpp $(CFLAGS) $(LIB)

compile/file.o: src/file.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/file.o -c src/file.cpp $(CFLAGS) $(LIB)

compile/filestatic.o: src/filestatic.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/filestatic.o -c src/filestatic.cpp $(CFLAGS) $(LIB)

compile/textsnippets.o: src/textsnippets.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/textsnippets.o -c src/textsnippets.cpp $(CFLAGS) $(LIB)

compile/time.o: src/time.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/time.o -c src/time.cpp $(CFLAGS) $(LIB)


compile/dir.o: src/dir.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/dir.o -c src/dir.cpp $(CFLAGS) $(LIB)

compile/inet.o: src/inet.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/inet.o -c src/inet.cpp $(CFLAGS) $(LIB)

compile/list.o: src/list.cpp Makefile compile/wordlist.o ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/list.o -c src/list.cpp $(CFLAGS) $(LIB)

compile/gfxreftest.o: src/gfxreftest.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/gfxreftest.o -c src/gfxreftest.cpp $(CFLAGS) $(LIB)

compile/grafix_imagefilter.o: src/grafix_imagefilter.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/grafix_imagefilter.o -c src/grafix_imagefilter.cpp $(CFLAGS) $(LIB)
	
compile/grafix_drawable.o: src/grafix_drawable.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/grafix_drawable.o -c src/grafix_drawable.cpp $(CFLAGS) $(LIB)
	
compile/threadtest.o: src/threadtest.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/threadtest.o -c src/threadtest.cpp $(CFLAGS) $(LIB)
	
compile/db_postgres.o: src/db_postgres.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/db_postgres.o -c src/db_postgres.cpp $(CFLAGS) $(LIB)
	
compile/toolkit.o: src/toolkit.cpp Makefile ppl7-tests.h src/toolkit.h
	mkdir -p compile
	$(CXX) -o compile/toolkit.o -c src/toolkit.cpp $(CFLAGS) $(LIB)
	
compile/logger.o: src/logger.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/logger.o -c src/logger.cpp $(CFLAGS) $(LIB)

compile/resolver.o: src/resolver.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/resolver.o -c src/resolver.cpp $(CFLAGS) $(LIB)
	
compile/configparser.o: src/configparser.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/configparser.o -c src/configparser.cpp $(CFLAGS) $(LIB)
	
compile/tcpsocket.o: src/tcpsocket.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/tcpsocket.o -c src/tcpsocket.cpp $(CFLAGS) $(LIB)

compile/digest.o: src/digest.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/digest.o -c src/digest.cpp $(CFLAGS) $(LIB)

compile/crypto.o: src/crypto.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/crypto.o -c src/crypto.cpp $(CFLAGS) $(LIB)

compile/mhash.o: src/mhash.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/mhash.o -c src/mhash.cpp $(CFLAGS) $(LIB)

compile/mcrypt.o: src/mcrypt.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/mcrypt.o -c src/mcrypt.cpp $(CFLAGS) $(LIB)

compile/audioinfo.o: src/audioinfo.cpp Makefile ppl7-tests.h
	mkdir -p compile
	$(CXX) -o compile/audioinfo.o -c src/audioinfo.cpp $(CFLAGS) $(LIB)
	