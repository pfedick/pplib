GTEST_DIR	= @GTEST_PREFIX@
CC			= @CC@
CXX			= @CXX@
EXTRA_CFLAGS = 
INCLUDE	= -I. -I../include -I$(GTEST_DIR)/include
CFLAGS	= -ggdb -Wall -DPPL6LIB $(INCLUDE) `../ppl6-config --cflags debug source` $(EXTRA_CFLAGS)
LIBS	= `../ppl6-config --libs debug source` @GCOV_LDFLAGS@ -lstdc++
PROGNAME = testsuite
OBJECTS = compile/wordlist.o \
	compile/textsnippets.o \
	compile/datetime.o \
	compile/main.o \
	compile/strings.o \
	compile/widestrings.o \
	compile/assocarray.o \
	compile/clog.o \
	compile/time.o \
	compile/file.o \
	compile/filestatic.o \
	compile/perlhelper.o \
	compile/pythonhelper.o \
	compile/dir.o \
	compile/id3tag.o \
	compile/memoryheap.o \
	compile/list.o \
	compile/audioinfo.o \
	compile/clientserver.o

$(PROGNAME): compile/libgtest.a $(OBJECTS)
	$(CXX) -O -ggdb -o $(PROGNAME) $(CFLAGS) $(OBJECTS) compile/libgtest.a $(LIBS)

all: $(PROGNAME)
	-mkdir -p tmp
	-rm -rf tmp/* *.tmp
	./$(PROGNAME)

test: $(PROGNAME)
	-mkdir -p tmp
	-rm -rf tmp/* *.tmp
	./$(PROGNAME)
	
xml: $(PROGNAME)
	-mkdir -p tmp
	-rm -rf tmp/* *.tmp
	-./$(PROGNAME) --gtest_output=xml

lcov: $(PROGNAME)
	-mkdir -p tmp
	-rm -rf tmp/* *.tmp
	lcov --base-directory ../ --directory ../ --zerocounters -q
	./$(PROGNAME)
	lcov --base-directory ../ --directory ../ -c -o ppl6_coverage.info
	rm -rf test_coverage
	genhtml -o test_coverage -t "ppl6 test coverage" --num-spaces 4 ppl6_coverage.info
	
clean:
	-rm -rf $(PROGNAME) compile loggertest clogtest.log* *.xml testsuite.valgrind
	-rm -f *.core
	-rm -rf tmp/* *.tmp

memcheck: $(PROGNAME)
	-valgrind --tool=memcheck --leak-check=full --show-reachable=no --suppressions=valgrind.suppressions --xml=yes --xml-file=testsuite.valgrind ./$(PROGNAME)


valgrind: $(PROGNAME)
	-valgrind --tool=memcheck --leak-check=full --track-origins=yes --suppressions=valgrind.suppressions ./$(PROGNAME) ;#--gtest_filter=StringTest.*


compile/libgtest.a:
	mkdir -p compile
	$(CXX) -I${GTEST_DIR}/include -I${GTEST_DIR} -o compile/gtest-all.o -c ${GTEST_DIR}/src/gtest-all.cc
	ar -rv compile/libgtest.a compile/gtest-all.o

compile/main.o: src/main.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/main.o -c src/main.cpp

compile/clog.o: src/clog.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/clog.o -c src/clog.cpp

compile/time.o: src/time.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/time.o -c src/time.cpp

compile/file.o: src/file.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/file.o -c src/file.cpp

compile/filestatic.o: src/filestatic.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/filestatic.o -c src/filestatic.cpp
			
compile/datetime.o: src/datetime.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/datetime.o -c src/datetime.cpp
	
compile/widestrings.o: src/widestrings.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/widestrings.o -c src/widestrings.cpp

compile/strings.o: src/strings.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/strings.o -c src/strings.cpp

compile/assocarray.o: src/assocarray.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/assocarray.o -c src/assocarray.cpp

compile/perlhelper.o: src/perlhelper.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/perlhelper.o -c src/perlhelper.cpp

compile/pythonhelper.o: src/pythonhelper.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/pythonhelper.o -c src/pythonhelper.cpp

compile/dir.o: src/dir.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/dir.o -c src/dir.cpp

compile/id3tag.o: src/id3tag.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/id3tag.o -c src/id3tag.cpp

compile/memoryheap.o: src/memoryheap.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/memoryheap.o -c src/memoryheap.cpp

compile/list.o: src/list.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/list.o -c src/list.cpp

compile/audioinfo.o: src/audioinfo.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/audioinfo.o -c src/audioinfo.cpp	
	
compile/wordlist.o: src/wordlist.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/wordlist.o -c src/wordlist.cpp
	
compile/textsnippets.o: src/textsnippets.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/textsnippets.o -c src/textsnippets.cpp
	
compile/clientserver.o: src/clientserver.cpp Makefile
	mkdir -p compile
	$(CXX) $(CFLAGS) -o compile/clientserver.o -c src/clientserver.cpp